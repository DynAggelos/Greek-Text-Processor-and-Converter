To Do:

   - Options
      -- Add option to use asterisks before letters for capitals (comes before all accents), and then treat anything without an asterisk before it as a lowercase.
      -- Add option to have one-case input and/or output.
      -- Add option to have iota adscript come after a capital letter (Thesaurus Linguae Graecae {tlg.uci.edu/encoding}), even though the rest comes before it.
      -- Add option to have capitals use accents/breathers which come afterward instead of before.
      -- Add option to turn off certain inputs (like final sigma and middle sigma if lunate sigma is wanted in the output, or like certain punctuation symbols which the user knows aren't used in the text). Doing so would make those boxes grayed out and ignored as far as duplicate input is concerned, and would cause the character to become a zero within the program so it won't match any text (since zero will only ever match a verse number, which is handled by a different part of the program).
   
   - Non-Option Inhancements
      -- Make verifyFields changes the same inputs preTextProcessing does so that if users find a strange version of a character in the original text and input it, it will still do what they expect. (For " and ', " and ' are each always treated as “ and ’, respectively, since beta code shouldn't be using “ and ’ anyways, although the preTextProcessor would change " and ' to “ and ’. For the skip array, when " is  proceeded by a space or // it becomes “, else if it's followed by a space or // it becomes ”, and when ' is proceeded by a space or // it becomes ‘, else if it's followed by a space or // it becomes ’ {with the // conditions being checked after the space conditions are checked, to give them less priority}.)
      -- Force uppercase beta code letters to be represented by uppercase letters, and lowercase by lowercase. This is because testing for letters requires explicit testing from the first upper/lowercase letter to the last (>= 'A' && <= 'Z'), so we can't use lowercase letters to represent uppercase letters, unless we explicitly test only uppercase or only lowercase (one-case input or output.
      -- Add keraiai symbol (αʹ and ͵α) for numbers.
      -- Add macron and breve "accents".
      -- Replace all non-standard Greek letters with standard Greek letters in preTextProcessing.
      -- One day add feature where the program assumes certain, more certain, letter values in beta code, and looks for variations of often-used words to determine the beta code values of letters which are most likely to vary (σςΣ, ν, ω, ψ, υ, η, ξ, θ, χ). This would automate the selection of input beta-code values. Then we could focus on the values of these specific letters for output, perhaps giving users a list of options (one being previous usage)?
      -- One day add automatic input types (Unicode, beta code, advanced beta code, old or new capital accent handling), just like letters as above. (? Or would it be better to not do this, since this would make it more difficult to detect letters, and letters and other characters are harder to change than these options {do to number of options that need to be looked through for characters}?)
      -- Turn off testing for advanced beta code symbols, and darken advanced beta code symbol boxes, when no advanced beta code option is on (input or output).
      -- Allow sigma beta code to take up to two characters (for S1 for σ, S2 for ς, and S3 for ϲ).
      -- Make error output display in a separate output window which is below the input and output boxes, and is one to three rows tall (but with scroll bar?). Success message should also display here if no errors are found. For each error type (such as error with a certain character), there should be one error message saying what the error was and how many times it appears in the text. If the same error type occurs more than once (which is likely to happen all the time) the error message will still display only once. In the output text, characters which can't be read should simply be printed with double ">>" and "<<" around them, to make them obvious, yet keep the output text more legible.

   - Notes
      -- Make sure user webpage tells the user to use characters from the keyboard whenever possible, and which characters to use for certain character types which aren't on the keyboard (middle dot, Greek characters with only an oxia or perhaps also a dialytica).

Notes:
- betaCodeLetterArray

0 = α
1 = β
2 = γ
3 = δ
4 = ε
5 = ζ
6 = η
7 = θ
8 = ι
9 = κ
10 = λ
11 = μ
12 = ν
13 = ξ
14 = ο
15 = π
16 = ρ
17 = σ
18 = ς
19 = τ
20 = υ
21 = φ
22 = χ
23 = ψ
24 = ω

25 = Α
26 = Β
27 = Γ
28 = Δ
29 = Ε
30 = Ζ
31 = Η
32 = Θ
33 = Ι
34 = Κ
35 = Λ
36 = Μ
37 = Ν
38 = Ξ
39 = Ο
40 = Π
41 = Ρ
42 = Σ
43 = Τ
44 = Υ
45 = Φ
46 = Χ
47 = Ψ
48 = Ω

49 = ϲ
50 = Ϲ

- betaCodeAccents (you may find it useful to write the following down on a separate piece of paper):

0 = ) -- (rough breather)
1 = ( -- (smooth breather)
2 = / -- (acute)
3 = \ -- (grave)
4 = ^ -- (circumflex)
5 = | -- (iota subscript)
6 = + -- (dieresis)

(Values from here on show multiple characters for easier comprehension, but are really a single character in the text.)
7 = )/
8 = )/|
9 = )\
10 = )\|
11 = )^
12 = )^|
13 = )|
14 = (/
15 = (/|
16 = (\
17 = (\|
18 = (^
19 = (^|
20 = (|
21 = /|
22 = \|
23 = ^|
24 = +/
25 = +\
26 = +^

- symbols

0 = ,
1 = .
2 = ; // separation of connected thoughts, as in English
3 = : // Introduction of connected thought, as in English
4 = ? // Question, as in English
5 = !
6 = —
7 = * // Note mark?
8 = {P} // Written paragraph break
9 = : // Chapter/Verse spacer (Not included in duplicate fields check)

- Order of Identifiers/Arrays/Strings as Function Arguments/Parameters

